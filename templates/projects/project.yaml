apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
kind: Project
metadata: # kpt-merge: projects/project-id
  name: project-id # kpt-set: ${project-id}-prod
  namespace: projects # kpt-set: ${projects-namespace}
  annotations:
    cnrm.cloud.google.com/auto-create-network: "false"
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone:project/v0.4.3,kpt-pkg
spec:
  name: project-id # kpt-set: ${project-id}-prod
  billingAccountRef:
    external: "AAAAAA-BBBBBB-CCCCCC" # kpt-set: ${billing-account-id}
  folderRef:
    name: name.of.folder # kpt-set: ${folder-name}
    namespace: hierarchy # kpt-set: ${folder-namespace}
---
apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
kind: Project
metadata: # kpt-merge: projects/project-id
  name: project-id # kpt-set: ${project-id}-staging
  namespace: projects # kpt-set: ${projects-namespace}
  annotations:
    cnrm.cloud.google.com/auto-create-network: "false"
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone:project/v0.4.3,kpt-pkg
spec:
  name: project-id # kpt-set: ${project-id}-staging
  billingAccountRef:
    external: "AAAAAA-BBBBBB-CCCCCC" # kpt-set: ${billing-account-id}
  folderRef:
    name: name.of.folder # kpt-set: ${folder-name}
    namespace: hierarchy # kpt-set: ${folder-namespace}
---
apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
kind: Project
metadata: # kpt-merge: projects/project-id
  name: project-id # kpt-set: ${project-id}-dev
  namespace: projects # kpt-set: ${projects-namespace}
  annotations:
    cnrm.cloud.google.com/auto-create-network: "false"
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone:project/v0.4.3,kpt-pkg
spec:
  name: project-id # kpt-set: ${project-id}-dev
  billingAccountRef:
    external: "AAAAAA-BBBBBB-CCCCCC" # kpt-set: ${billing-account-id}
  folderRef:
    name: name.of.folder # kpt-set: ${folder-name}
    namespace: hierarchy # kpt-set: ${folder-namespace}